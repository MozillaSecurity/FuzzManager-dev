var VueSlider=function(){"use strict";return{template:'\n                <div class="slider-container">\n                    <div class="slider-track" ref="track" @click="handleTrackClick">\n                        <div\n                            class="slider-fill"\n                            :style="{ width: percentage + \'%\' }"\n                        ></div>\n                        <div\n                            class="slider-dot"\n                            :style="{ left: percentage + \'%\' }"\n                            @mousedown="startDrag"\n                            @touchstart="startDrag"\n                        >\n                            <div class="slider-value">!{ Math.ceil(modelValue) }!</div>\n                        </div>\n                    </div>\n                </div>\n            ',delimiters:["!{","}!"],props:{max:{type:Number,default:100},modelValue:{type:Number,required:!0,default:0}},emits:["update:modelValue"],data:()=>({isDragging:!1}),computed:{percentage(){return this.modelValue/this.max*100}},mounted(){this.boundHandleDrag=this.handleDrag.bind(this),this.boundStopDrag=this.stopDrag.bind(this),window.addEventListener("mousemove",this.boundHandleDrag),window.addEventListener("mouseup",this.boundStopDrag),window.addEventListener("touchmove",this.boundHandleDrag,{passive:!1}),window.addEventListener("touchend",this.boundStopDrag)},unmounted(){window.removeEventListener("mousemove",this.boundHandleDrag),window.removeEventListener("mouseup",this.boundStopDrag),window.removeEventListener("touchmove",this.boundHandleDrag),window.removeEventListener("touchend",this.boundStopDrag)},methods:{updateValue(e){const t=this.$refs.track;if(!t)return;const n=t.getBoundingClientRect(),i=Math.min(Math.max(0,e-n.left),n.width)/n.width*100/100*this.max;this.$emit("update:modelValue",Math.min(Math.max(0,i),this.max))},startDrag(e){e.preventDefault(),this.isDragging=!0;const t=e.touches?e.touches[0].clientX:e.clientX;this.updateValue(t)},stopDrag(){this.isDragging=!1},handleDrag(e){if(!this.isDragging)return;e.preventDefault();const t=e.touches?e.touches[0].clientX:e.clientX;requestAnimationFrame((()=>{this.updateValue(t)}))},handleTrackClick(e){this.isDragging||this.updateValue(e.clientX)}}}}();
